/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package Menu;

import Connection.ConnectionJava;
import User.addUser;
import User.changeUser;
import User.loginForm;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AL-HACK3R
 */
public class tampilForm extends javax.swing.JFrame {
    
    Connection con;
    Statement stm;
    PreparedStatement ps;
    ResultSet rs;
    DefaultTableModel table;
    /**
     * Creates new form tampilForm
     */
    public tampilForm() {
        initComponents();
        TampilData();
        setTitle("Cari / Ubah Data Judul");
        judulField.setText("");
        namaPenulisField.setText("");
        tahunField.setText("");
        Dimension layar = Toolkit.getDefaultToolkit().getScreenSize();
        int x = layar.width / 2 - this.getSize().width / 2;
        int y = layar.height / 2 - this.getSize().height / 2;
        this.setLocation(x,y);
        ubahBtn.setVisible(false);
        hapusBtn.setVisible(false);
        cancelBtn.setVisible(false);
        editBtn.setVisible(false);
        trash1.setVisible(false);
        trash2.setVisible(false);
        trash3.setVisible(false);
        editBtn.setVisible(false);
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }
    
    private void tampilData() {
        Object baris[] = {"Id", "Judul", "Nama Penulis", "Tanggal"};
        table = new DefaultTableModel(null, baris);
        tabel.setModel(table);
    }
    
    private void TampilData() {
        Object baris[] = {"Id", "Judul", "Nama Penulis", "Tanggal"};
        table = new DefaultTableModel(null, baris);
        tabel.setModel(table);
        try {
            con = new ConnectionJava().ConnectDB();
            String select = "select * from judul order by id ASC";
            stm = con.createStatement();
            rs = stm.executeQuery(select);
            while(rs.next()) {
                String id = rs.getString("id");
                String judul = rs.getString("judul");
                String namaPenulis = rs.getString("namaPenulis");
                String tahun = rs.getString("tahun");
                String[] data = {id, judul, namaPenulis, tahun};
                table.addRow(data);
            }
        }catch(SQLException e) {
            
        }
    }
    
    private void clear(){
        judulField.setText("");
        namaPenulisField.setText("");
        tahunField.setText("");
        cariField.setText("");
        TampilData();
        ubahBtn.setVisible(false);
        hapusBtn.setVisible(false);
        editBtn.setVisible(false);
        cancelBtn.setVisible(false);
        judulField.setEditable(false);
        namaPenulisField.setEditable(false);
        tahunField.setEditable(false);
        cancelBtn.setVisible(false);       
        trash1.setVisible(false);
        trash2.setVisible(false);
        trash3.setVisible(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        judulField = new javax.swing.JTextArea();
        namaPenulisField = new javax.swing.JTextField();
        tahunField = new javax.swing.JTextField();
        hapusBtn = new javax.swing.JButton();
        ubahBtn = new javax.swing.JButton();
        cariField = new javax.swing.JTextField();
        cariBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        refreshBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        trash1 = new javax.swing.JButton();
        trash2 = new javax.swing.JButton();
        trash3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        addUser = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1200, 700));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("Judul Skripsi");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 120, 120, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setText("Nama Penulis");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, -1, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setText("Tanggal");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 250, -1, -1));

        judulField.setEditable(false);
        judulField.setColumns(20);
        judulField.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        judulField.setLineWrap(true);
        judulField.setRows(5);
        judulField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                judulFieldKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(judulField);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, 910, 70));

        namaPenulisField.setEditable(false);
        namaPenulisField.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        namaPenulisField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                namaPenulisFieldKeyPressed(evt);
            }
        });
        getContentPane().add(namaPenulisField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 180, 280, 35));

        tahunField.setEditable(false);
        tahunField.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        tahunField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tahunFieldKeyPressed(evt);
            }
        });
        getContentPane().add(tahunField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 240, 160, 35));

        hapusBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        hapusBtn.setText("HAPUS DATA");
        hapusBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hapusBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hapusBtnMouseExited(evt);
            }
        });
        hapusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusBtnActionPerformed(evt);
            }
        });
        getContentPane().add(hapusBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 280, -1, 35));

        ubahBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ubahBtn.setText("UBAH DATA");
        ubahBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ubahBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ubahBtnMouseExited(evt);
            }
        });
        ubahBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahBtnActionPerformed(evt);
            }
        });
        getContentPane().add(ubahBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 280, -1, 35));

        cariField.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        cariField.setName(""); // NOI18N
        cariField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cariFieldKeyReleased(evt);
            }
        });
        getContentPane().add(cariField, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 340, 720, 35));
        cariField.getAccessibleContext().setAccessibleName("");

        cariBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cariBtn.setText("CARI DATA");
        cariBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cariBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cariBtnMouseExited(evt);
            }
        });
        cariBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariBtnActionPerformed(evt);
            }
        });
        getContentPane().add(cariBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 340, -1, 35));

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabel.setAutoscrolls(false);
        tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 1300, 300));

        refreshBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        refreshBtn.setText("REFRESH");
        refreshBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refreshBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refreshBtnMouseExited(evt);
            }
        });
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });
        getContentPane().add(refreshBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 340, -1, 35));

        editBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/edit.png"))); // NOI18N
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        getContentPane().add(editBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 180, 35, 35));

        cancelBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/exit.png"))); // NOI18N
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        getContentPane().add(cancelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 180, 35, 35));

        trash1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/bin.png"))); // NOI18N
        trash1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trash1ActionPerformed(evt);
            }
        });
        getContentPane().add(trash1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 110, 35, 35));

        trash2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/bin.png"))); // NOI18N
        trash2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trash2ActionPerformed(evt);
            }
        });
        getContentPane().add(trash2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 180, 35, 35));

        trash3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/bin.png"))); // NOI18N
        trash3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trash3ActionPerformed(evt);
            }
        });
        getContentPane().add(trash3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 240, 35, 35));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/cariJudul.jpg"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -25, 1370, 750));

        jMenu5.setText("Menu");
        jMenu5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu5ActionPerformed(evt);
            }
        });

        jMenuItem3.setText("Tambah Judul");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem3);

        jMenuItem2.setText("Cari Judul");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem2);

        jMenuBar2.add(jMenu5);

        addUser.setText("User");

        jMenuItem4.setText("Tambah User");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        addUser.add(jMenuItem4);

        jMenuItem5.setText("Ubah Data User");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        addUser.add(jMenuItem5);

        jMenuItem6.setText("Logout");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        addUser.add(jMenuItem6);

        jMenuBar2.add(addUser);

        setJMenuBar(jMenuBar2);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void ubahBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahBtnActionPerformed
        String judul = judulField.getText();
        String namaPenulis = namaPenulisField.getText();
        String tahun = tahunField.getText();
        int sel = tabel.getSelectedRow();
        String id = table.getValueAt(sel, 0).toString();
        int ID = Integer.parseInt(id);
        if(judul.equals("")){
            JOptionPane.showMessageDialog(null, "Form Judul Tidak Boleh Kosong");
            judulField.requestFocus(true);
        }
        if(namaPenulis.equals("")){
            JOptionPane.showMessageDialog(null, "Form Nama Penulis Tidak Boleh Kosong");
            namaPenulisField.requestFocus(true);
        }
        if(tahun.equals("")){
            JOptionPane.showMessageDialog(null, "Form Tahun Tidak Boleh Kosong");
            tahunField.requestFocus(true);
        }
        if(!judul.equals("")&&!namaPenulis.equals("")&&!tahun.equals("")){
            try{
                int ubah = JOptionPane.showConfirmDialog(null, "Yakin Ingin Mengubah Data Ini?", "Ubah Data", 0);
                if(ubah==0){
                    try{
                        String update = "update judul set judul = '"+judul+"', namaPenulis = '"+namaPenulis+"' , tahun = '"+tahun+"' where id = '"+ID+"'";
                        stm = con.createStatement();
                        stm.executeUpdate(update);
                        JOptionPane.showMessageDialog(null, "Berhasil Mengubah Data Judul Skripsi");
                        TampilData();
                        clear();                       
                    }catch(SQLException | HeadlessException e){
                        JOptionPane.showMessageDialog(null, "Gagal Mengubah Data Judul Skripsi");
                    }
                }
            }catch(HeadlessException e ){
                JOptionPane.showMessageDialog(null, "Gagal Melakukan Verifikasi Data Judul Skripsi");
            }
        }       
    }//GEN-LAST:event_ubahBtnActionPerformed
    
    private void hapusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusBtnActionPerformed
        int sel = tabel.getSelectedRow();
        String id = table.getValueAt(sel, 0).toString();
        int ID = Integer.parseInt(id);
        int hapus = JOptionPane.showConfirmDialog(null, "Yakin Ingin Menghapus Data Ini?", "Hapus Data", 0);
        if (hapus == 0) {
            try {
                String Hapus = "delete from judul WHERE id = '" + ID + "'";
                stm = con.createStatement();
                stm.executeUpdate(Hapus);
                JOptionPane.showMessageDialog(null, "Berhasil Menghapus Data Judul Skripsi");
                TampilData();
                clear();
            }catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Gagal Menghapus Data Judul Skripsi");
            }
        }
    }//GEN-LAST:event_hapusBtnActionPerformed
    
    private void cariFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cariFieldKeyReleased
        String data = cariField.getText();
        tampilData();
        try{
            con = new ConnectionJava().ConnectDB();
            String cari = "select * from judul where judul like '%" +data+ "%'" + "or tahun like '%" +data+ "%'";
            stm = con.prepareStatement(cari);
            rs = stm.executeQuery(cari);
            while(rs.next()){
                table.addRow(new Object[] {
                    rs.getInt(1),
                    rs.getString(2),
                    rs.getString(3),
                    rs.getString(4)
                });
            }
            tabel.setModel(table);
        }
        catch(Exception e){
            
        }
    }//GEN-LAST:event_cariFieldKeyReleased
    
    private void cariBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariBtnActionPerformed
        cariField.requestFocus(true);
        String data = cariField.getText();
        tampilData();
        try{
            con = new ConnectionJava().ConnectDB();
            String cari = "select * from judul where judul like '%" +data+ "%'" + "or tahun like '%" +data+ "%'";
            stm = con.prepareStatement(cari);
            rs = stm.executeQuery(cari);
            while(rs.next()){
                table.addRow(new Object[] {
                    rs.getInt(1),
                    rs.getString(2),
                    rs.getString(3),
                    rs.getString(4)
                });
            }
            tabel.setModel(table);
        }
        catch(Exception e){
            
        }
    }//GEN-LAST:event_cariBtnActionPerformed
    
    private void tabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMouseClicked
        editBtn.setVisible(true);
        int sel = tabel.getSelectedRow();
        String id = table.getValueAt(sel, 0).toString();
        int ID = Integer.parseInt(id);
        try {
            String select = "select * from judul where id = '" +ID+ "'";
            rs = stm.executeQuery(select);
            while(rs.next()) {
                String judul = rs.getString("judul");
                String nama = rs.getString("namaPenulis");
                String tahun = rs.getString("tahun");
                
                judulField.setText(judul);
                namaPenulisField.setText(nama);
                tahunField.setText(tahun);
            }
        }catch(SQLException e) {
            
        }
    }//GEN-LAST:event_tabelMouseClicked
    
    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        clear();
    }//GEN-LAST:event_refreshBtnActionPerformed
    
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        this.dispose();
        new tambahForm().setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed
    
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        this.dispose();
        new tampilForm().setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    
    private void jMenu5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu5ActionPerformed
        
    }//GEN-LAST:event_jMenu5ActionPerformed
    
    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        this.dispose();
        new addUser().setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed
    
    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        this.dispose();
        new changeUser().setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed
    
    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        this.dispose();
        new loginForm().setVisible(true);
    }//GEN-LAST:event_jMenuItem6ActionPerformed
    
    private void ubahBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ubahBtnMouseEntered
        ubahBtn.setBackground(Color.DARK_GRAY);
    }//GEN-LAST:event_ubahBtnMouseEntered
    
    private void ubahBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ubahBtnMouseExited
        ubahBtn.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_ubahBtnMouseExited
    
    private void hapusBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hapusBtnMouseEntered
        hapusBtn.setBackground(Color.DARK_GRAY);
    }//GEN-LAST:event_hapusBtnMouseEntered
    
    private void hapusBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hapusBtnMouseExited
        hapusBtn.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_hapusBtnMouseExited
    
    private void refreshBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshBtnMouseEntered
        refreshBtn.setBackground(Color.DARK_GRAY);
    }//GEN-LAST:event_refreshBtnMouseEntered
    
    private void refreshBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshBtnMouseExited
        refreshBtn.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_refreshBtnMouseExited
    
    private void cariBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cariBtnMouseEntered
        cariBtn.setBackground(Color.DARK_GRAY);
    }//GEN-LAST:event_cariBtnMouseEntered
    
    private void cariBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cariBtnMouseExited
        cariBtn.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_cariBtnMouseExited

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        ubahBtn.setVisible(true);
        hapusBtn.setVisible(true);
        judulField.setEditable(true);
        namaPenulisField.setEditable(true);
        tahunField.setEditable(true);
        cancelBtn.setVisible(true);
        editBtn.setVisible(false);
    }//GEN-LAST:event_editBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        ubahBtn.setVisible(false);
        hapusBtn.setVisible(false);
        judulField.setEditable(false);
        namaPenulisField.setEditable(false);
        tahunField.setEditable(false);
        cancelBtn.setVisible(false);
        trash1.setVisible(false);
        trash2.setVisible(false);
        trash3.setVisible(false);
        editBtn.setVisible(true);
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void trash1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trash1ActionPerformed
        judulField.setText("");
        trash1.setVisible(false);
    }//GEN-LAST:event_trash1ActionPerformed

    private void trash2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trash2ActionPerformed
        namaPenulisField.setText("");
        trash2.setVisible(false);
    }//GEN-LAST:event_trash2ActionPerformed

    private void trash3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trash3ActionPerformed
        tahunField.setText("");
        trash3.setVisible(false);
    }//GEN-LAST:event_trash3ActionPerformed

    private void namaPenulisFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_namaPenulisFieldKeyPressed
        trash2.setVisible(true);
        if(namaPenulisField.getText().isEmpty()){
            trash2.setVisible(false);
        }
    }//GEN-LAST:event_namaPenulisFieldKeyPressed

    private void tahunFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tahunFieldKeyPressed
        trash3.setVisible(true);
        if(tahunField.getText().isEmpty()){
            trash3.setVisible(false);
        }
    }//GEN-LAST:event_tahunFieldKeyPressed

    private void judulFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_judulFieldKeyPressed
        trash1.setVisible(true);
        if(judulField.getText().isEmpty()){
            trash1.setVisible(false);
        }
    }//GEN-LAST:event_judulFieldKeyPressed
                
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tampilForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tampilForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tampilForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tampilForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tampilForm().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu addUser;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton cariBtn;
    private javax.swing.JTextField cariField;
    private javax.swing.JButton editBtn;
    private javax.swing.JButton hapusBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea judulField;
    private javax.swing.JTextField namaPenulisField;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JTable tabel;
    private javax.swing.JTextField tahunField;
    private javax.swing.JButton trash1;
    private javax.swing.JButton trash2;
    private javax.swing.JButton trash3;
    private javax.swing.JButton ubahBtn;
    // End of variables declaration//GEN-END:variables
}
